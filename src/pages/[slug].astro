---
import { API_BASE_URL, maxPosts } from '@/lib/constants';
import type { Post } from '@/interfaces.posts';
import MainLayout from '@/layouts/MainLayout.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const response = await fetch(API_BASE_URL,
    {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({
        query: `
        query AllSlugs {
          posts (first:${maxPosts}) {
            nodes {
              slug
            }
          }
        }
        `
      }),
    });

  // destructure data from our JSON
  const { data } = await response.json();

  //  assign the array of nodes to "posts" variable for usability
  const posts: Post[] = data.posts.nodes

  // transform our array of {slug: "post-slug"} objects into an array of {params: {slug: "post-slug"}}
  const paths = posts.map(post => {
    return {params: post}
  })

  return paths
}

const { slug } = Astro.params;

const singleResponse = await fetch(API_BASE_URL,
    {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({
        query: `
        query SinglePost($id: ID = "${slug}") {
          post(idType: SLUG, id: $id) {
            date
            content
            title
            featuredImage {
              node {
                sourceUrl(size: ARCHIVEIMAGE)
              }
            }
          }
        }
        `
      }),
    });

// destructure data from our JSON
const { data } = await singleResponse.json();

//  assign the post info to singlePost variable for usability
const singlePost: Post = data.post
---

<MainLayout>
  <article class="max-w-screen-md mx-auto">

    <div class="text-center  w-auto mx-auto mb-5">
      <p class="rounded-full bg-slate-300 py-2 px-4 inline-block">
        {new Date(singlePost.date).toLocaleDateString('en-us', { year:"numeric", month:"long", day:"numeric"})}
      </p>
    </div>
    <h1 class="text-center text-3xl text-bold mb-10" transition:name={`${singlePost.slug}-title`}>{singlePost.title}</h1>
    {
      singlePost.featuredImage && (
        <Image src={singlePost.featuredImage.node.sourceUrl} width={600} height={400} alt={singlePost.title} transition:name={`${singlePost.slug}-image`}/>
      )
    }
    <!-- We can use the set:html directive with a self closing tag to output raw html -->
    <div set:html={singlePost.content} class="prose lg:prose-lg" />


</article>
</MainLayout>
